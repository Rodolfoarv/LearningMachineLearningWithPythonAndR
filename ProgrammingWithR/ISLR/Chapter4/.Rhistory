source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
View(mydata)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
source('~/Documents/StudentResilence/kmeans.R', echo=TRUE)
setwd("Documents/LearningMachineLearningWithPythonAndR/ProgrammingWithR/ISLR/Chapter4/")
library(ISLR)
pairs(Smarket)
cor(Smarket[,-9])
attach(Smarket)
plot(Volume)
glm.fits = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Voolume, data=Smarket, family=binomial)
glm.fits = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, family=binomial)
summary(glm.fits)
coef(glm.fits)
glm.probs = predict(glm.fits, type="response")
glm.probs[1:10]
contrasts(Direction)
glm.pred = rep("Down",1250)
glm.pred[glm.probs>.5] = "Up"
table(glm.pred, Direction)
(507 + 145) / 1250
mean(glm.pred==Direction)
train = (Year < 2005)
Smarket.2005= Smarket[!train,]
dim(Smarket.2005)
Direction.2005 = Direction[!train]
glm.fits= glm ( Direction∼Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume ,
data = Smarket , family = binomial , subset = train )
glm.fits= glm ( Direction∼Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume , data = Smarket , family = binomial , subset = train )
glm.fits = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, family=binomial, subset=train)
glm.fits = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, family=binomial, subset=train)
glm.probs = predict(glm.fits, Smarket.2005, type=response)
table(glm.pred, Direction.2005)
glm.pred[glm.probs > .5] = "Up"
table(glm.pred, Direction.2005)
glm.pred = rep (" Down " ,252)
glm.pred [ glm . probs >.5]=" Up "
glm.pred [ glm.probs >.5]=" Up "
table ( glm.pred , Direction .2005)
table ( glm.pred , Direction.2005)
